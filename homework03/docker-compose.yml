services:
  database:
    image: postgres
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - ${POSTGRES_HOST_DB_PATH}:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 5s
      timeout: 1s
      retries: 5      

  migrations:
    image: ghcr.io/kukymbr/goose-docker:3.19.2
    restart: "no"
    network_mode: host
    env_file:
      - .env
    environment:
      - GOOSE_DRIVER=postgres
      - GOOSE_DBSTRING=host=${POSTGRES_HOST}  port=${POSTGRES_PORT} user=${POSTGRES_USER} dbname=${POSTGRES_DB} password=${POSTGRES_PASSWORD} sslmode=disable
      - GOOSE_VERBOSE=true
    depends_on: 
      database:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations

# for testing purpose only, should be removed
# Check internal structure of the database
  fix_permissions:
    image: alpine
    command: ["sh", "-c", "chmod -R 777 /var/lib/postgresql/data"]
    volumes:
      - ${POSTGRES_HOST_DB_PATH}:/var/lib/postgresql/data
    restart: "no"
    depends_on: 
      database:
        condition: service_healthy